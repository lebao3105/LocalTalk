name: UWP

on:
  push:
    branches: [ "master" ]
    paths:
      - '!**.md'
      - '!**.txt'
      - '!.git*'
      - '.github/'
      - '!LICENSE'
  pull_request:
    branches: [ "master" ]
    paths:
      - '!**.md'
      - '!**.txt'
      - '!.git*'
      - '.github/'
      - '!LICENSE'
  workflow_dispatch:
  workflow_call:
jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x64, x86, ARM]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: LocalTalkUWP

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $certificatePath = "LocalTalkUWP_TemporaryKey.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
      working-directory: LocalTalkUWP
        
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild LocalTalkUWP.csproj -Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
      working-directory: LocalTalkUWP


    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: msbuild LocalTalkUWP.csproj /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=$env:TemporaryKeyName /p:AppxPackageDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true /p:Platform=$env:Platform
      env:
        Appx_Bundle: Never
        Appx_Package_Build_Mode: SideloadOnly
        Appx_Package_Dir: Packages\
        Configuration: ${{ matrix.configuration }}
        Platform: ${{ matrix.platform }}
        TemporaryKeyName: LocalTalkUWP_TemporaryKey.pfx
      working-directory: LocalTalkUWP

    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path LocalTalkUWP_TemporaryKey.pfx
      working-directory: LocalTalkUWP

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: UWP Package (${{ env.Solution_Name }})
        path: ${{ env.Solution_Name }}\\Packages\\
